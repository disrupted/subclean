name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.10"
          - "3.9"

    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - name: Configure poetry virtualenv
        run: poetry config virtualenvs.in-project true

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry

      - run: poetry env use ${{ matrix.python-version }}

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Lint flake8
        run: |
          poetry run pre-commit run --hook-stage manual flake8 --all-files --show-diff-on-failure

      - name: Check black
        run: |
          poetry run pre-commit run --hook-stage manual black --all-files --show-diff-on-failure

      - name: Check mypy
        run: |
          poetry run pre-commit run --hook-stage manual mypy --all-files

      # - name: Check pyright
      #   uses: jakebailey/pyright-action@v1
      #   with:
      #     venv-path: ./.venv

      # - name: Check pyright
      #   uses: jordemort/action-pyright@v1
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      # venv_path: ./.venv
      # lib: true

      - uses: actions/setup-node@v3.5.0

      - name: Check pyright
        run: |
          npm install pyright
          cd "$GITHUB_WORKSPACE"
          source ./.venv/bin/activate
          npx pyright --venv-path ./.venv

      - name: Type completeness
        run: |
          cd "$GITHUB_WORKSPACE"
          source ./.venv/bin/activate
          npx pyright --verifytypes subclean --outputjson | jq --arg prefix "completeness " '.typeCompleteness.completenessScore * 100 | tostring + "% type completeness"'

      - name: Check syntax update
        run: |
          poetry run pre-commit run --hook-stage manual pyupgrade --all-files

      - name: Test pytest
        run: |
          poetry run pytest
